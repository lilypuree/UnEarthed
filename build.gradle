buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '4.0.4'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'java'

version = "${mod_version}"
group = "oriondevcorgitaco.${modid}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${modid}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

mixin {
    add sourceSets.main, "${modid}.refmap.json"
}

minecraft {
    mappings channel: "official", version: "1.16.5"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            args "-mixin.config=" + archivesBaseName + ".mixins.json"


            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            args "-mixin.config=" + archivesBaseName + ".mixins.json"

            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'unearthed', '--all', '--output', file('src/generated/resources/'), '--existing', sourceSets.main.resources.srcDirs[0], '--existing-mod', 'dynamictrees'

            source sourceSets.main
        }
    }
}
sourceSets {
    main.resources.srcDirs += 'src/generated/resources'
}
repositories {
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven {
        name = 'Sponge / Mixin'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
    maven { url = "https://www.cursemaven.com" }
    mavenCentral()
}
configurations {
    shade
}
dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.4-SNAPSHOT:processor'

    compileOnly 'org.jetbrains:annotations:20.1.0'
    compileOnly fg.deobf("curse.maven:dynamic_trees-252818:3626059")

    shade implementation('net.openhft:zero-allocation-hashing:0.11')
}
shadowJar {
    classifier = ''
    configurations = [project.configurations.shade]
    relocate 'net.openhft', "${project.group}.shadow.net.openhft"
}
reobf {
    shadowJar {}
}
jar {
    manifest {
        attributes([
                "Specification-Title"     : "${modid}",
                "Specification-Vendor"    : "examplemodsareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "${modid}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "${modid}.mixins.json",
        ])
    }
}

def reobfFile = file("$buildDir/reobfJar/output.jar")

def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}